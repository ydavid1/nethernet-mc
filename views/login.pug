doctype html
html
  head
    title Login - NetherNet
    include includes/head
    link(rel='stylesheet', href='assets/css/login.css')
    script(src='https://www.google.com/recaptcha/api.js' async='' defer='')
  body
    include includes/body
    .container.text-center
      h1 NetherNet
      .login-card
        //- h1 NetherNet
        .login-options
          a.btn.discord-login(href="/api/discord") 
            //- img.discordimg(src='assets/images/discord-icon.png', alt='Discord Icon')
            span Login with Discord
          p or
          form#login(action="/api/login" method="POST")
            input(type="email" name="email" placeholder="Email" required)
            input(type="password" name="password" placeholder="Password" required)
            .g-recaptcha(data-sitekey='6LcE__QpAAAAACoVQpOs9NKR0scCZCny4YzQSutO')
            button(type="submit") Login
          p Don't have an account?
          a(href="/register") Register
          script(src='assets/js/login.js')
          script.
            document.querySelector('#login').addEventListener('submit', async function(event) {
                event.preventDefault();
                var form = this;
                var formData = new FormData(form);
                console.log(formData.get('email'));
                
                if (formData.get('g-recaptcha-response') === '') {
                    Toastify({
                        text: "Please complete the reCAPTCHA",
                        duration: 5000,
                        close: true,
                        gravity: "top", // `top` or `bottom`
                        position: "right", // `left`, `center` or `right`
                        backgroundColor: "#ff0000",
                        stopOnFocus: true, // Prevents dismissing of toast on hover
                    }).showToast();
                    return;
                }

                await fetch('/api/login', {
                    method: 'POST',
                    headers: {
                        Accept: "application/json",
                        "Content-Type": "application/json"
                    },
                    body: await JSON.stringify({
                        email: formData.get('email'),
                        password: formData.get('password'),
                        'g-recaptcha-response': formData.get('g-recaptcha-response')
                    })
                }).then(response => response.json()) // Convert the response to JSON
                .then(data => {
                    if (data.message === "Success") {
                        console.log('Logged in');
                        window.location.href = '/panel';
                    } else {
                        console.log('Invalid login');
                        grecaptcha.reset()
                        // make a toast saying invalid login
                        Toastify({
                            text: `${data.reason} `,
                            duration: 3000,
                            close: true,
                            gravity: "top", // `top` or `bottom`
                            position: "right", // `left`, `center` or `right`
                            backgroundColor: "#ff0000",
                            stopOnFocus: true, // Prevents dismissing of toast on hover
                        }).showToast();
                    }
                }).catch(err => {
                    console.log(err);
                });

            });
          if registered
            script.
              Toastify({
                  text: "Successfully registered! Please login.",
                  duration: 5000,
                  close: true,
                  gravity: "top", // `top` or `bottom`
                  position: "right", // `left`, `center` or `right`
                  backgroundColor: "#34eb74",
                  stopOnFocus: true, // Prevents dismissing of toast on hover
              }).showToast();
